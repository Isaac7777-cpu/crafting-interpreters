plugins {
    id 'java'
    id 'application'
}

group = 'com.craftinginterpreters'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'com.craftinginterpreters.lox.Lox'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Configuration for running GenerateAst
configurations {
    tool
}

// Task to compile the tool classes
task compileTool(type: JavaCompile) {
    source = fileTree('src/main/java') {
        include 'com/craftinginterpreters/tool/GenerateAst.java'
    }
    destinationDirectory = file("$buildDir/classes/tool")
    classpath = sourceSets.main.compileClasspath
}

// Task to generate AST classes
task generateAst(type: JavaExec) {
    group = 'build'
    description = 'Generate AST classes for Lox'

    // Use the compiled tool classes
    classpath = files("$buildDir/classes/tool") + sourceSets.main.compileClasspath
    mainClass = 'com.craftinginterpreters.tool.GenerateAst'

    // Set the output directory for generated files
    args = ['src/main/java/com/craftinginterpreters/lox']

    dependsOn compileTool
}

// Configure run task for REPL
run {
    standardInput = System.in
    standardOutput = System.out
    ignoreExitValue = true
}

// Task to run Lox examples
task runExample(type: JavaExec) {
    group = 'Execution'
    description = 'Run a Lox example file'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.craftinginterpreters.lox.Lox'
    standardInput = System.in
    standardOutput = System.out
    ignoreExitValue = true

    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

// Make sure AST is generated before compiling main sources
compileJava {
    dependsOn generateAst
    // Exclude the tool package from main compilation
    exclude 'com/craftinginterpreters/tool/**'
}
